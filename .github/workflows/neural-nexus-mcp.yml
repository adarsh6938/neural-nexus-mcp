# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Neural Nexus MCP Tests

on:
  push:
    branches: [ "**" ]  # Trigger on all branches
  pull_request:
    branches: [ "**" ]  # Trigger on all PRs

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      # Set up Neo4j service for graph database and vector search
      neo4j:
        image: neo4j:2025.03.0-enterprise
        env:
          NEO4J_AUTH: neo4j/neural_nexus_password
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
          NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget -O - http://localhost:7474 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    # Fix for rollup optional dependencies issue
    - name: Clean npm cache
      run: |
        rm -rf node_modules
        rm -f package-lock.json
      
    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: npm run build --if-present
      
    - name: Create mock .env file for tests
      run: |
        echo "# Mock environment for CI testing" >> .env
        echo "# This enables tests to run with local Transformers.js embeddings" >> .env
        echo "# The MOCK_EMBEDDINGS flag forces the use of DefaultEmbeddingService" >> .env
        echo "# which generates random vectors instead of calling Transformers.js" >> .env
        echo "MOCK_EMBEDDINGS=true" >> .env
        echo "EMBEDDING_PROVIDER=transformers" >> .env
        echo "TRANSFORMERS_MODEL=Xenova/all-MiniLM-L6-v2" >> .env
        echo "ENV_FILE_CREATED=true" >> .env
        cat .env
      
    - name: Initialize Neo4j Schema
      run: npm run neo4j:init
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: neural_nexus_password
        NEO4J_DATABASE: neo4j
        NEO4J_VECTOR_INDEX: entity_embeddings
        NEO4J_VECTOR_DIMENSIONS: 1536
        NEO4J_SIMILARITY_FUNCTION: cosine
      
    - name: Run tests
      run: npm test
      env:
        MEMORY_STORAGE_TYPE: neo4j
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: neural_nexus_password
        NEO4J_DATABASE: neo4j
        NEO4J_VECTOR_INDEX: entity_embeddings
        NEO4J_VECTOR_DIMENSIONS: 1536
        NEO4J_SIMILARITY_FUNCTION: cosine
        EMBEDDING_PROVIDER: transformers
        TRANSFORMERS_MODEL: Xenova/all-MiniLM-L6-v2
        MOCK_EMBEDDINGS: true
      
    - name: Run test coverage
      run: npm run test:coverage
      env:
        MEMORY_STORAGE_TYPE: neo4j
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: neural_nexus_password
        NEO4J_DATABASE: neo4j
        NEO4J_VECTOR_INDEX: entity_embeddings
        NEO4J_VECTOR_DIMENSIONS: 1536
        NEO4J_SIMILARITY_FUNCTION: cosine
        EMBEDDING_PROVIDER: transformers
        TRANSFORMERS_MODEL: Xenova/all-MiniLM-L6-v2
        MOCK_EMBEDDINGS: true

  # Note: Automatic npm publishing has been disabled in favor of manual releases
  # To publish a new version:
  # 1. Update version in package.json
  # 2. Update CHANGELOG.md
  # 3. Run: npm run build
  # 4. Run: npm publish --access public
  # 5. Create git tag: git tag vX.X.X && git push origin vX.X.X 